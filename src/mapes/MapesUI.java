package mapes;

import albuminfoprogram.Album;
import albuminfoprogram.AlbumCollection;
import albuminfoprogram.Playlist;
import albuminfoprogram.PlaylistTrack;
import albuminfoprogram.Track;
import java.awt.Dimension;
import java.awt.Image;
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author mre16utu
 */
public class MapesUI extends javax.swing.JFrame {

   AlbumCollection myAlbumCollection;

   /**
    * Creates new form MapesUI
    */
   public MapesUI()
   {
      initComponents();
      myAlbumCollection = new AlbumCollection();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {

      jButton3 = new javax.swing.JButton();
      jPanel1 = new javax.swing.JPanel();
      jScrollPane1 = new javax.swing.JScrollPane();
      jListAlbums = new javax.swing.JList<>();
      jScrollPane2 = new javax.swing.JScrollPane();
      jList2 = new javax.swing.JList<>();
      jLabel1 = new javax.swing.JLabel();
      jScrollPane3 = new javax.swing.JScrollPane();
      jList3 = new javax.swing.JList<>();
      jButton1 = new javax.swing.JButton();
      jButton2 = new javax.swing.JButton();
      jButton4 = new javax.swing.JButton();
      jButton5 = new javax.swing.JButton();
      jButton6 = new javax.swing.JButton();
      jButton7 = new javax.swing.JButton();

      jButton3.setText("jButton3");

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      jListAlbums.setModel(new javax.swing.AbstractListModel<String>()
      {
         String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
         public int getSize() { return strings.length; }
         public String getElementAt(int i) { return strings[i]; }
      });
      jListAlbums.addListSelectionListener(new javax.swing.event.ListSelectionListener()
      {
         public void valueChanged(javax.swing.event.ListSelectionEvent evt)
         {
            jListAlbumsValueChanged(evt);
         }
      });
      jScrollPane1.setViewportView(jListAlbums);

      jList2.setModel(new javax.swing.AbstractListModel<String>()
      {
         String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
         public int getSize() { return strings.length; }
         public String getElementAt(int i) { return strings[i]; }
      });
      jScrollPane2.setViewportView(jList2);

      jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      jLabel1.setMinimumSize(new java.awt.Dimension(1, 1));

      jList3.setModel(new javax.swing.AbstractListModel<String>()
      {
         String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
         public int getSize() { return strings.length; }
         public String getElementAt(int i) { return strings[i]; }
      });
      jScrollPane3.setViewportView(jList3);

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(jScrollPane3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel1Layout.createSequentialGroup()
                  .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
               .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
            .addContainerGap())
      );

      jButton1.setText("Load Albums");
      jButton1.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jButtonLoadAlbumsActionPerformed(evt);
         }
      });

      jButton2.setText("Load Playlist");
      jButton2.setToolTipText("");
      jButton2.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jButtonLoadPlaylistActionPerformed(evt);
         }
      });

      jButton4.setText("Play");
      jButton4.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jButtonPlayActionPerformed(evt);
         }
      });

      jButton5.setText("Forward");

      jButton6.setText("Back");

      jButton7.setText("Stop");
      jButton7.setToolTipText("");
      jButton7.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jButtonStopActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 304, Short.MAX_VALUE)
            .addComponent(jButton6)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton7)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton5)
            .addGap(300, 300, 300))
         .addGroup(layout.createSequentialGroup()
            .addGap(80, 80, 80)
            .addComponent(jButton1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2)
            .addGap(72, 72, 72))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jButton1)
               .addComponent(jButton2))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jButton4)
               .addComponent(jButton5)
               .addComponent(jButton6)
               .addComponent(jButton7))
            .addContainerGap())
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void jButtonPlayActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonPlayActionPerformed
   {//GEN-HEADEREND:event_jButtonPlayActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_jButtonPlayActionPerformed

   private void jButtonLoadAlbumsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonLoadAlbumsActionPerformed
   {//GEN-HEADEREND:event_jButtonLoadAlbumsActionPerformed
      System.out.println("Loading albums");
      // TODO add your handling code here:
      myAlbumCollection.readAlbumCollectionFromFile("albums.txt");
      DefaultListModel<String> albumList = new DefaultListModel<>();
      jListAlbums.setModel(albumList);
      for (Album album : myAlbumCollection.getAlbums())
      {
         albumList.addElement(album.getAlbumTitle());
      }
   }//GEN-LAST:event_jButtonLoadAlbumsActionPerformed

   private void jButtonLoadPlaylistActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonLoadPlaylistActionPerformed
   {//GEN-HEADEREND:event_jButtonLoadPlaylistActionPerformed
      System.out.println("Loading playlist");
      // TODO add your handling code here:
      Playlist playlist = new Playlist(myAlbumCollection);
      playlist.loadPlaylist("playlist.txt");
      DefaultListModel<String> playListModel = new DefaultListModel<>();
      jList2.setModel(playListModel);
      for (PlaylistTrack track : playlist.getPlaylistTracks())
      {
         playListModel.addElement(track.getTrackTitle());
      }
   }//GEN-LAST:event_jButtonLoadPlaylistActionPerformed

   private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonStopActionPerformed
   {//GEN-HEADEREND:event_jButtonStopActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_jButtonStopActionPerformed

   private void jListAlbumsValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_jListAlbumsValueChanged
   {//GEN-HEADEREND:event_jListAlbumsValueChanged
      // TODO add your handling code here:
      //System.out.println("Item selected" + jListAlbums.getSelectedValue());
      DefaultListModel<String> albumDetailsList = new DefaultListModel<>();
      jList3.setModel(albumDetailsList);

      String albumTitle = jListAlbums.getSelectedValue();
      Album album = myAlbumCollection.getAlbumByTitle(albumTitle);
      String albumArtist = album.getAlbumArtist();

      // print album details to list
      albumDetailsList.addElement("Album Title: " + albumTitle);
      albumDetailsList.addElement("Album Artist: " + albumArtist);
      albumDetailsList.addElement("Tracks:");
      for (Track track : album.getTracks())
      {
         albumDetailsList.addElement(track.getTrackTitle());
      }
      
      ImageIcon image = new ImageIcon();
      // get list of image files
      File folder = new File("images/");
	
	// TODO USE HASHMAP FOR THIS
      File[] fileList = folder.listFiles();
      for(File file : fileList)
      {
         // check file is a file and not a directory
         if (file.isFile())
         {
            String fileName = file.getName();
            //System.out.println("Filename: " + fileName);
            String shortTitle = albumTitle.toLowerCase();
		// remove 'the' from start of album title
		if(shortTitle.substring(0,4).equals("the "))
		{
		   shortTitle = shortTitle.substring(4, shortTitle.length());
		}
		// remove white space and special characters
            shortTitle = shortTitle.replaceAll("\\s+","").replaceAll("[-+.^:,?']","").toLowerCase();
            //System.out.println("Short title: " + shortTitle);
            if(fileName.toLowerCase().contains(shortTitle))
            {
               //System.out.println("Match found");
		   ImageIcon tempImage = new ImageIcon("images/" + fileName);
               image = getScaledImage(tempImage, jLabel1);
			     //new ImageIcon(tempImage.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH));
            }
         } 
      }
    
      jLabel1.setIcon(image);
   }//GEN-LAST:event_jListAlbumsValueChanged

   
   // Method to get scaled dimensions of album cover
   private ImageIcon getScaledImage(ImageIcon image, JLabel jLabel)
   {
	// variables to store image and label dimensions
	int imageWidth = image.getIconWidth();
	int imageHeight = image.getIconHeight();
	int labelWidth = jLabel.getWidth();
	int labelHeight = jLabel.getHeight();
	System.out.println(imageWidth + ", " + imageHeight + ", " + labelWidth + ", " + labelHeight);
	// variables to store scaled dimensions
	int scaledWidth;
	int scaledHeight;
	
	// match width of image to width of label
	scaledWidth = labelWidth;
	scaledHeight = (int) (imageHeight * (labelWidth/(float)imageWidth));
	
	// if height too great, scale image down to fit height to window
	if(scaledHeight > labelHeight)
	{
	   scaledWidth = (int) (scaledWidth * (labelHeight/(float)scaledHeight));
	   scaledHeight = labelHeight;
	}
	
	// create and return scaled image
	return new ImageIcon(image.getImage().getScaledInstance(scaledWidth, 
					         scaledHeight, Image.SCALE_SMOOTH));
   }
   
   
   
   /**
    * @param args the command line arguments
    */
   public static void main(String args[])
   {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try
      {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
         {
            if ("Nimbus".equals(info.getName()))
            {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex)
      {
         java.util.logging.Logger.getLogger(MapesUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex)
      {
         java.util.logging.Logger.getLogger(MapesUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex)
      {
         java.util.logging.Logger.getLogger(MapesUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex)
      {
         java.util.logging.Logger.getLogger(MapesUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run()
         {
            new MapesUI().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton jButton1;
   private javax.swing.JButton jButton2;
   private javax.swing.JButton jButton3;
   private javax.swing.JButton jButton4;
   private javax.swing.JButton jButton5;
   private javax.swing.JButton jButton6;
   private javax.swing.JButton jButton7;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JList<String> jList2;
   private javax.swing.JList<String> jList3;
   private javax.swing.JList<String> jListAlbums;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   // End of variables declaration//GEN-END:variables
}
